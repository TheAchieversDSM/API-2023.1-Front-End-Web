name: Deploy to Production

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Configurar o ambiente para execuÃ§Ã£o dos testes
      - name: Configure Environment
        run: |
          # Configurar seu ambiente de teste aqui
          # Exemplo: Instalar dependÃªncias, configurar banco de dados, etc.

      # Executar os testes
      - name: Run Tests
        run: |
          # Comandos para executar os testes
          # Exemplo: npm test, python run_tests.py, etc.

  Deploy-Production:
    runs-on: ubuntu-latest
    env:
      VERCEL_GIT_COMMIT_REF: ${{ github.ref }}
    
    needs: Test

    steps:
      - uses: actions/checkout@v2

      - name: Verify Branch
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "ðŸ›‘ Build canceled. Branch not allowed for Production deployment"
            exit 1
          fi
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Build Project Artifacts
        id: build
        run: |
          echo "ðŸš€ Starting build..."
          echo "::set-output name=exit-code::$?"
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Deploy Project Artifacts to Vercel
        if: ${{ needs.Test.result == 'success' }}
        run: |
          echo "ðŸ’« Deploying project to production..."
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Check Build Status
        if: ${{ steps.build.outputs.exit-code == 0 }}
        run: echo "âœ… Build successful"
      
      - name: Display Build Output
        if: ${{ steps.build.outputs.exit-code == 2 }}
        run: echo "ðŸ›‘ Build canceled. Branch not allowed for Production deployment"
