name: Deploy to Production

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Build and Run Docker Container
        run: |
          docker build -t cypress-tests .
          docker run -p 8000:3000 -d cypress-tests npm start

      - name: Verify Container Listing
        run: docker ps
      
      - name: Install Dependencies
        run: cd api && npm install
        
      - name: Run Cypress Tests
        run: cd api && npm run cypress:run

      - name: Generate Report
        run: cd api && npm run nyc:coverage-report

      - name: Upload Report
        run: cd api && npm run sonar:build

  Deploy-Production:
    name: Deploy-Production
    runs-on: ubuntu-latest
    env:
      VERCEL_GIT_COMMIT_REF: ${{ github.ref }}
    
    needs: Test

    steps:
      - uses: actions/checkout@v2

      - name: Verify Branch
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "ðŸ›‘ Build canceled. Branch not allowed for Production deployment"
            exit 1
          fi
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Build Project Artifacts
        id: build
        run: |
          echo "ðŸš€ Starting build..."
          echo "::set-output name=exit-code::$?"
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Deploy Project Artifacts to Vercel
        if: ${{ needs.Test.result == 'success' }}
        run: |
          echo "ðŸ’« Deploying project to production..."
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Check Build Status
        if: ${{ steps.build.outputs.exit-code == 0 }}
        run: echo "âœ… Build successful"
      
      - name: Display Build Output
        if: ${{ steps.build.outputs.exit-code == 2 }}
        run: echo "ðŸ›‘ Build canceled. Branch not allowed for Production deployment"
